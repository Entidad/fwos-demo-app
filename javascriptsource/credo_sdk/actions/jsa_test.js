// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
//import '../shim.js';
import * as credo_ts_core from '@credo-ts/core';
//import * as credo_ts_anoncreds from '@credo-ts/anoncreds';
//import * as credo_ts_askar from '@credo-ts/askar';
//import * as credo_ts_cheqd from '@credo-ts/cheqd'; // Property 'TextEncoder' does not exist: shim
//import * as credo_ts_indy_vdr from '@credo-ts/indy-vdr';
//import * as credo_ts_openid4vc from '@credo-ts/openid4vc'; // crypto module is not available
//import * as credo_ts_question_answer from '@credo-ts/question-answer';
//import * as credo_ts_react_native from '@credo-ts/react-native';
//import type { InitConfig } from '@credo-ts/core'//only for typescript
//https://credo.js.org/guides/getting-started/set-up
import { Agent } from '@credo-ts/core'
import { agentDependencies } from '@credo-ts/react-native'
//https://credo.js.org/guides/getting-started/set-up/aries-askar
import { AskarModule } from '@credo-ts/askar'
import { ariesAskar } from '@hyperledger/aries-askar-react-native'
// END EXTRA CODE

/**
 * @returns {Promise.<void>}
 */
export async function jsa_test() {
	// BEGIN USER CODE
	try{
		/*
		console.info("credo_ts_core");
		console.info(typeof(credo_ts_core));
		console.info(JSON.stringify(Object.keys(credo_ts_core)));
		console.info("credo_ts_anoncreds");
		console.info(typeof(credo_ts_anoncreds));
		console.info(JSON.stringify(Object.keys(credo_ts_anoncreds)));
		console.info("credo_ts_askar");
		console.info(typeof(credo_ts_askar));
		console.info(JSON.stringify(Object.keys(credo_ts_askar)));
		console.info("credo_ts_cheqd");
		console.info(typeof(credo_ts_cheqd));
		console.info(JSON.stringify(Object.keys(credo_ts_cheqd)));
		console.info("credo_ts_indy_vdr");
		console.info(typeof(credo_ts_indy_vdr));
		console.info(JSON.stringify(Object.keys(credo_ts_indy_vdr)));
		console.info("credo_ts_openid4vc");
		console.info(typeof(credo_ts_openid4vc));
		console.info(JSON.stringify(Object.keys(credo_ts_openid4vc)));
		console.info("credo_ts_question_answer");
		console.info(typeof(credo_ts_question_answer));
		console.info(JSON.stringify(Object.keys(credo_ts_question_answer)));
		console.info("credo_ts_react_native");
		console.info(typeof(credo_ts_react_native));
		console.info(JSON.stringify(Object.keys(credo_ts_react_native)));
		*/
		const config/*: InitConfig*/ = {
			label: 'docs-agent-react-native',
			walletConfig: {
				id: 'wallet-id',
				key: 'testkey0000000000000000000000000',
			},
		};

		const agent = new Agent({
			config,
			dependencies: agentDependencies,
  			modules: {
  			  // Register the Askar module on the agent
  			  askar: new AskarModule({
  			    ariesAskar,
  			  }),
  			},
  		})
		return(Promise.resolve());
	}catch(e){
		return(Promise.reject(e.toString()));
	}
	// END USER CODE
}
