// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
import "../shim.js";
import support from "../support/entidad";
// END EXTRA CODE

/**
 * save({ content, tags, id }: SaveGenericRecordOption): Promise<GenericRecord>
 * @param {string} agent_key
 * @param {string} content - json object
 * @param {string} tags - optional json array
 * @param {string} id_ - optional string
 * @param {string} metadata - optional json
 * @returns {Promise.<string>}
 */
export async function jsa_aries_agent_genericRecords_save(agent_key, content, tags, id_, metadata) {
	// BEGIN USER CODE
	try{
		if(agent_key==null)return Promise.reject("Invalid agent_key parameter");										//mandatory
		if(content==null)return Promise.reject("Invalid content parameter");										//mandatory
		try{
			content=JSON.parse(content);
		}catch(e){
			return Promise.reject("Argument content is not a valid JSON object");
		}
		//if(tags==null)return Promise.reject("Invalid tags parameter");										//mandatory
		if(tags!=null)try{
			tags=JSON.parse(tags);
		}catch(e){
			return Promise.reject("Argument tags is not a valid JSON object");
		}
		//if(id_==null)return Promise.reject("Invalid id_ parameter");										//mandatory
		if(metadata!=null)try{
			metadata=JSON.parse(metadata);
		}catch(e){
			return Promise.reject("Argument metadata is not a valid JSON object");
		}
		let agent=support.cache.get(agent_key);
		if(agent==null)return Promise.reject("Agent not found in cache");
		//agent.genericRecords.save({ content, tags, id }: SaveGenericRecordOption): Promise<GenericRecord>
		return Promise.resolve(JSON.stringify(await agent.genericRecords.save({content:content,tags:tags,id:id_,metadata:metadata})));
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
