// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
import support from "../support/entidad";
// END EXTRA CODE

/**
 * entidad note: skip for now
 * 
 * remove(teardown: Subscription | Unsubscribable | (() => void)): void
 * The finalizer to remove from this subscription
 * 
 * 
 * Removes a finalizer from this subscription that was previously added with the {@link #add} method.
 * 
 * Note that Subscription instances, when unsubscribed, will automatically remove themselves from every other Subscription they have been added to. This means that using the remove method is not a common thing and should be used thoughtfully.
 * 
 * If you add the same finalizer instance of a function or an unsubscribable object to a Subscription instance more than once, you will need to call remove the same number of times to remove all instances.
 * 
 * All finalizer instances are removed to free up memory upon unsubscription.
 * @param {string} agent_key
 * @returns {Promise.<void>}
 */
export async function jsa_aries_agent_messageSubscription_remove(agent_key) {
	// BEGIN USER CODE
	throw new Error("JavaScript action was not implemented");
	// END USER CODE
}
